{"ast":null,"code":"var _jsxFileName = \"/Users/danielbyta/Documents/work/sezam-auth/src/components/SignUp/index.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}, \"SignUp page\"), /*#__PURE__*/React.createElement(SignUpForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }\n}));\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const {\n        username,\n        email,\n        passwordOne\n      } = this.state;\n      this.props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne).then(authUser => {\n        this.setState({ ...INITIAL_STATE\n        });\n        console.log('Creating document in db for user.uid', authUser.user.uid);\n        this.props.firebase.doCreateNewInstanceBasedOnAuthUid(authUser.user.uid);\n        this.props.firebase.doRecognizeUserUid(authUser.user.uid);\n\n        try {\n          localStorage.setItem('uid', authUser.user.uid);\n        } catch (e) {\n          console.log(e);\n        }\n\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log({\n        [event.target.name]: event.target.value\n      }, 'state');\n    };\n\n    this.state = { ...INITIAL_STATE\n    };\n  }\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error\n    } = this.state;\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"username\",\n      value: username,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Full Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      value: email,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Email Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"passwordOne\",\n      value: passwordOne,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"passwordTwo\",\n      value: passwordTwo,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, \"Sign Up\"), error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    }, error.message));\n  }\n\n}\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\n\nconst SignUpLink = () => /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }\n}, \"\\u041D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430? \", /*#__PURE__*/React.createElement(Link, {\n  to: ROUTES.SIGN_UP,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 21\n  }\n}, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"));\n\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };","map":{"version":3,"sources":["/Users/danielbyta/Documents/work/sezam-auth/src/components/SignUp/index.js"],"names":["React","Component","Link","withRouter","compose","withFirebase","ROUTES","SignUpPage","INITIAL_STATE","username","email","passwordOne","passwordTwo","error","SignUpFormBase","constructor","props","onSubmit","event","state","firebase","doCreateUserWithEmailAndPassword","then","authUser","setState","console","log","user","uid","doCreateNewInstanceBasedOnAuthUid","doRecognizeUserUid","localStorage","setItem","e","history","push","HOME","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","SignUpForm","SignUpLink","SIGN_UP"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { compose } from 'recompose'\nimport { withFirebase } from '../Firebase'\n \nimport * as ROUTES from '../../constants/routes'\n\nconst SignUpPage = () => (\n    <div>\n        <h1>SignUp page</h1>\n        <SignUpForm/>\n    </div>\n)\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n  };\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...INITIAL_STATE }\n    }\n\n    onSubmit = event => {\n        const { username, email, passwordOne } = this.state\n \n        this.props.firebase\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\n            .then(authUser => {\n                this.setState({ ...INITIAL_STATE })\n                console.log('Creating document in db for user.uid', authUser.user.uid )\n                this.props.firebase.doCreateNewInstanceBasedOnAuthUid(authUser.user.uid)\n                this.props.firebase.doRecognizeUserUid(authUser.user.uid)\n                try {\n                    localStorage.setItem('uid', authUser.user.uid)\n                }\n                catch(e) {console.log(e)}\n                \n                this.props.history.push(ROUTES.HOME)\n            })\n            .catch(error => {\n                this.setState({ error });\n            })\n    \n        event.preventDefault()\n    }\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value })\n        console.log({ [event.target.name]: event.target.value }, 'state')\n    }\n\n    render() {\n        const {\n            username,\n            email,\n            passwordOne,\n            passwordTwo,\n            error\n        } = this.state\n\n        const isInvalid =\n            passwordOne !== passwordTwo ||\n            passwordOne === '' ||\n            email === '' ||\n            username === ''\n\n        return (\n        <form onSubmit={this.onSubmit}>\n            <input\n                name=\"username\"\n                value={username}\n                onChange={this.onChange}\n                type='text'\n                placeholder=\"Full Name\"\n            />\n\n            <input\n                name=\"email\"\n                value={email}\n                onChange={this.onChange}\n                type=\"text\"\n                placeholder=\"Email Address\"\n            />\n            <input\n                name=\"passwordOne\"\n                value={passwordOne}\n                onChange={this.onChange}\n                type=\"password\"\n                placeholder=\"Password\"\n            />\n            <input\n                name=\"passwordTwo\"\n                value={passwordTwo}\n                onChange={this.onChange}\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n            />\n            <button\n                disabled={isInvalid} \n                type=\"submit\">\n                    Sign Up\n            </button>\n            {error && <p>{error.message}</p>}\n        </form>\n        )\n    }\n}\n\nconst SignUpForm = compose(\n    withRouter,\n    withFirebase\n)(SignUpFormBase)\n\nconst SignUpLink = () => (\n    <p>\n      Нет аккаунта? <Link to={ROUTES.SIGN_UP}>Зарегистрироваться</Link>\n    </p>\n  )\n\nexport default SignUpPage\nexport { SignUpForm, SignUpLink }"]},"metadata":{},"sourceType":"module"}