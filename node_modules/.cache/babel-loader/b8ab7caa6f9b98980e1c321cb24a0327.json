{"ast":null,"code":"var _jsxFileName = \"/Users/danielbyta/Documents/work/sezam-auth/src/components/Account/index.js\";\nimport React, { useState } from 'react';\nimport TodosShow from '../TodosShow';\nimport TodoAdd from '../TodoAdd';\nimport firebase from '../Firebase';\nimport { withAuthorization } from '../Session';\nlet uid = localStorage.getItem('uid');\n\nconst sendTodo = todo => todo.todo;\n\nconst AccountPage = () => {\n  // const [JSXTodoShow, renderJSXTodoShow] = useState(\n  //   <TodosShow\n  //     key={Date.now()}\n  //     firebase={firebase} \n  //     uid={uid} \n  //     toAddTodo={null}\n  //   />\n  //   )\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"\\u0410\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\"), /*#__PURE__*/React.createElement(TodoAdd, {\n    firebase: firebase,\n    uid: uid,\n    onAddTodo: key => {\n      let todo = JSON.parse(localStorage.getItem(key));\n      localStorage.removeItem(key);\n      renderJSXTodoShow( /*#__PURE__*/React.createElement(TodosShow, {\n        key: Date.parse(todo.createdAt),\n        firebase: firebase,\n        uid: uid //toAddTodo={todo}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), JSXTodoShow);\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);","map":{"version":3,"sources":["/Users/danielbyta/Documents/work/sezam-auth/src/components/Account/index.js"],"names":["React","useState","TodosShow","TodoAdd","firebase","withAuthorization","uid","localStorage","getItem","sendTodo","todo","AccountPage","key","JSON","parse","removeItem","renderJSXTodoShow","Date","createdAt","JSXTodoShow","condition","authUser"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,OAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,iBAAT,QAAkC,YAAlC;AAEA,IAAIC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAV;;AAEA,MAAMC,QAAQ,GAAIC,IAAD,IAAUA,IAAI,CAACA,IAAhC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,eAEE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEP,QAAnB;AAA6B,IAAA,GAAG,EAAEE,GAAlC;AAAuC,IAAA,SAAS,EAAEM,GAAG,IAAI;AACvD,UAAIF,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWP,YAAY,CAACC,OAAb,CAAqBI,GAArB,CAAX,CAAX;AACAL,MAAAA,YAAY,CAACQ,UAAb,CAAwBH,GAAxB;AACAI,MAAAA,iBAAiB,eACf,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEC,IAAI,CAACH,KAAL,CAAWJ,IAAI,CAACQ,SAAhB,CADP;AAEE,QAAA,QAAQ,EAAEd,QAFZ;AAGE,QAAA,GAAG,EAAEE,GAHP,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADe,CAAjB;AAQD,KAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAcGa,WAdH,CADJ;AAkBD,CA5BD;;AA8BA,MAAMC,SAAS,GAAGC,QAAQ,IAAI,CAAC,CAACA,QAAhC;;AAEA,eAAehB,iBAAiB,CAACe,SAAD,CAAjB,CAA6BT,WAA7B,CAAf","sourcesContent":["import React, {useState} from 'react'\nimport TodosShow from '../TodosShow'\nimport TodoAdd  from '../TodoAdd'\nimport firebase from '../Firebase'\nimport { withAuthorization } from '../Session'\n \nlet uid = localStorage.getItem('uid')\n\nconst sendTodo = (todo) => todo.todo\n\nconst AccountPage = () => {\n  // const [JSXTodoShow, renderJSXTodoShow] = useState(\n  //   <TodosShow\n  //     key={Date.now()}\n  //     firebase={firebase} \n  //     uid={uid} \n  //     toAddTodo={null}\n  //   />\n  //   )\n    \n  return (\n      <div>\n        <h1>Аккаунт</h1>\n        <TodoAdd firebase={firebase} uid={uid} onAddTodo={key => {\n          let todo = JSON.parse(localStorage.getItem(key))\n          localStorage.removeItem(key)\n          renderJSXTodoShow(\n            <TodosShow \n              key={Date.parse(todo.createdAt)} \n              firebase={firebase} \n              uid={uid} \n              //toAddTodo={todo}\n            />\n          )\n        }}/>\n        {JSXTodoShow}\n      </div>\n    )\n}\n \nconst condition = authUser => !!authUser;\n \nexport default withAuthorization(condition)(AccountPage)"]},"metadata":{},"sourceType":"module"}