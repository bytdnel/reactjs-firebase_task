{"ast":null,"code":"import app from 'firebase/app';\nimport firebase from 'firebase';\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\nconsole.log(config);\n\nclass Firebase {\n  constructor() {\n    this.doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n\n    this.doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n\n    this.doSignOut = () => this.auth.signOut();\n\n    this.doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    this.doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n    this.doCreateNewInstanceBasedOnAuthUid = async user => {\n      try {\n        const doc = this.db.collection('users').doc(user.uid);\n        await doc.set({\n          username: user.username\n        });\n        return {\n          message: 'Created node betwen authUser and Clowd Firestore'\n        };\n      } catch (e) {}\n    };\n\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.db = firebase.firestore();\n  }\n\n}\n\nexport default Firebase;","map":{"version":3,"sources":["/Users/danielbyta/Documents/work/sezam-auth/src/components/Firebase/firebase.js"],"names":["app","firebase","config","apiKey","process","env","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","console","log","Firebase","constructor","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doCreateNewInstanceBasedOnAuthUid","user","doc","db","collection","uid","set","username","message","e","initializeApp","firestore"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAGA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADT;AAEXC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,qBAFb;AAGXC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,sBAHd;AAIXC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,oBAJZ;AAKXC,EAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,wBALhB;AAMXC,EAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW;AANpB,CAAf;AASAC,OAAO,CAACC,GAAR,CAAYhB,MAAZ;;AAEA,MAAMiB,QAAN,CAAe;AACXC,EAAAA,WAAW,GAAG;AAAA,SAMdC,gCANc,GAMqB,CAACC,KAAD,EAAQC,QAAR,KAC/B,KAAKC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAAgDC,QAAhD,CAPU;;AAAA,SASdG,4BATc,GASiB,CAACJ,KAAD,EAAQC,QAAR,KAC3B,KAAKC,IAAL,CAAUG,0BAAV,CAAqCL,KAArC,EAA4CC,QAA5C,CAVU;;AAAA,SAYdK,SAZc,GAYF,MAAM,KAAKJ,IAAL,CAAUK,OAAV,EAZJ;;AAAA,SAcdC,eAdc,GAcIR,KAAK,IAAI,KAAKE,IAAL,CAAUO,sBAAV,CAAiCT,KAAjC,CAdb;;AAAA,SAgBdU,gBAhBc,GAgBKT,QAAQ,IACvB,KAAKC,IAAL,CAAUS,WAAV,CAAsBC,cAAtB,CAAqCX,QAArC,CAjBU;;AAAA,SAmBdY,iCAnBc,GAmBsB,MAAMC,IAAN,IAAc;AAC9C,UAAI;AACA,cAAMC,GAAG,GAAG,KAAKC,EAAL,CAAQC,UAAR,CAAmB,OAAnB,EAA4BF,GAA5B,CAAgCD,IAAI,CAACI,GAArC,CAAZ;AACA,cAAMH,GAAG,CAACI,GAAJ,CAAQ;AACVC,UAAAA,QAAQ,EAAEN,IAAI,CAACM;AADL,SAAR,CAAN;AAGA,eAAO;AACHC,UAAAA,OAAO,EAAE;AADN,SAAP;AAGH,OARD,CAQE,OAAMC,CAAN,EAAS,CAEV;AAGJ,KAjCa;;AACV5C,IAAAA,GAAG,CAAC6C,aAAJ,CAAkB3C,MAAlB;AACA,SAAKsB,IAAL,GAAYxB,GAAG,CAACwB,IAAJ,EAAZ;AACA,SAAKc,EAAL,GAAUrC,QAAQ,CAAC6C,SAAT,EAAV;AACH;;AALU;;AAqCf,eAAe3B,QAAf","sourcesContent":["import app from 'firebase/app'\nimport firebase from 'firebase'\n\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  }\n\nconsole.log(config)\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config)\n        this.auth = app.auth()\n        this.db = firebase.firestore()\n    }\n\n    doCreateUserWithEmailAndPassword = (email, password) =>\n        this.auth.createUserWithEmailAndPassword(email, password)\n\n    doSignInWithEmailAndPassword = (email, password) =>\n        this.auth.signInWithEmailAndPassword(email, password)\n\n    doSignOut = () => this.auth.signOut()\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email)\n \n    doPasswordUpdate = password =>\n        this.auth.currentUser.updatePassword(password)\n\n    doCreateNewInstanceBasedOnAuthUid = async user => {\n        try {\n            const doc = this.db.collection('users').doc(user.uid)\n            await doc.set({\n                username: user.username\n            })\n            return {\n                message: 'Created node betwen authUser and Clowd Firestore'\n            }\n        } catch(e) {\n\n        }\n        \n\n    }\n}\n\nexport default Firebase;"]},"metadata":{},"sourceType":"module"}