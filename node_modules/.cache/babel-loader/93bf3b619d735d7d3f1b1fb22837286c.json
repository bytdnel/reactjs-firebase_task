{"ast":null,"code":"var _jsxFileName = \"/Users/danielbyta/Documents/work/sezam-auth/src/components/TodosShow/index.js\";\nimport React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nlet resolvedTodo = false;\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.todos = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 22\n      }\n    }, \"To\");\n  }\n\n  componentDidMount() {\n    console.log('mount');\n  }\n\n  componentDidUpdate() {\n    console.log('update');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    }, \"\\u041D\\u0430\\u0447\\u0438\\u043D\\u0430\\u0435\\u043C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E)\");\n  }\n\n} // const TodoListi = ({todos}) => {\n//     console.log({todos})\n//     const [JSXComponents, renderTodos] = React.useState()\n//     if (!resolvedTodo) {\n//         todos.then(result => {\n//             let resolvedTodos = result.map(todo => {return <p>{todo.todo}</p>})\n//             console.log('Receiver Data')\n//             resolvedTodo = true\n//             renderTodos(resolvedTodos)\n//         })\n//     } //else {\n//         // renderTodos(<p>Ну че это победа</p>)\n//         // todos.then(result => {\n//         //     // console.log({result})\n//         //     let resolvedTodos = result.map(todo => <p>{todo.todo}</p>)\n//         //     renderTodos(resolvedTodos)\n//         // })\n//     // }\n//     return(\n//         <div>\n//             {!resolvedTodo && <p>Подождите, данные еще не пришли из Firebase</p>}\n//             {JSXComponents}\n//             {[<p>Hello</p>, <p>Hi</p>]}\n//         </div>\n//     )\n// }\n\n\nlet setTodos = async (fun, uid, toAddTodo) => {\n  fun(uid).then(result => {\n    return result;\n  }); //console.log(todos, toAddTodo)\n  //if(todos) return todos\n};\n\nclass TodosShowBase extends Component {\n  constructor(props) {\n    super(props);\n    console.log({\n      props\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TodoList, {\n      todos: setTodos(this.props.firebase.doGetTodos, this.props.uid, this.props.toAddTodo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst TodosShow = compose(withFirebase)(TodosShowBase);\nexport default TodosShow;","map":{"version":3,"sources":["/Users/danielbyta/Documents/work/sezam-auth/src/components/TodosShow/index.js"],"names":["React","Component","compose","withFirebase","resolvedTodo","TodoList","constructor","props","console","log","todos","componentDidMount","componentDidUpdate","render","setTodos","fun","uid","toAddTodo","then","result","TodosShowBase","firebase","doGetTodos","TodosShow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,YAAT,QAA6B,aAA7B;AAEA,IAAIC,YAAY,GAAG,KAAnB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAKG,KAAL,gBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAb;AACH;;AAGDC,EAAAA,iBAAiB,GAAG;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AAEDG,EAAAA,kBAAkB,GAAG;AACjBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGAAP;AACH;;AAlB4B,C,CAqBjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,QAAQ,GAAG,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,SAAjB,KAA+B;AAC1CF,EAAAA,GAAG,CAACC,GAAD,CAAH,CAASE,IAAT,CAAcC,MAAM,IAAI;AAAC,WAAOA,MAAP;AAAc,GAAvC,EAD0C,CAE1C;AACA;AACH,CAJD;;AAOA,MAAMC,aAAN,SAA4BnB,SAA5B,CAAsC;AAClCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,MAAAA;AAAD,KAAZ;AACH;;AAGDM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEC,QAAQ,CAAC,KAAKP,KAAL,CAAWc,QAAX,CAAoBC,UAArB,EAAiC,KAAKf,KAAL,CAAWS,GAA5C,EAAiD,KAAKT,KAAL,CAAWU,SAA5D,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAbiC;;AAgBtC,MAAMM,SAAS,GAAGrB,OAAO,CAACC,YAAD,CAAP,CAAsBiB,aAAtB,CAAlB;AAEA,eAAeG,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport { compose } from 'recompose'\nimport { withFirebase } from '../Firebase'\n\nlet resolvedTodo = false\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props)\n        console.log(props)\n        this.todos = <div>To</div>\n    }\n    \n\n    componentDidMount() {\n        console.log('mount')\n    }\n\n    componentDidUpdate() {\n        console.log('update')\n    }\n\n    render() {\n        return(<p>Начинаем заново)</p>)\n    }\n}\n\n// const TodoListi = ({todos}) => {\n//     console.log({todos})\n//     const [JSXComponents, renderTodos] = React.useState()\n//     if (!resolvedTodo) {\n//         todos.then(result => {\n//             let resolvedTodos = result.map(todo => {return <p>{todo.todo}</p>})\n//             console.log('Receiver Data')\n//             resolvedTodo = true\n//             renderTodos(resolvedTodos)\n//         })\n//     } //else {\n//         // renderTodos(<p>Ну че это победа</p>)\n//         // todos.then(result => {\n//         //     // console.log({result})\n//         //     let resolvedTodos = result.map(todo => <p>{todo.todo}</p>)\n//         //     renderTodos(resolvedTodos)\n//         // })\n//     // }\n\n//     return(\n//         <div>\n//             {!resolvedTodo && <p>Подождите, данные еще не пришли из Firebase</p>}\n//             {JSXComponents}\n//             {[<p>Hello</p>, <p>Hi</p>]}\n//         </div>\n//     )\n// }\n\nlet setTodos = async (fun, uid, toAddTodo) => {\n    fun(uid).then(result => {return result})\n    //console.log(todos, toAddTodo)\n    //if(todos) return todos\n}\n\n\nclass TodosShowBase extends Component {\n    constructor(props) {\n        super(props)\n        console.log({props})\n    }\n    \n\n    render() { \n        return(\n            <div>\n                <TodoList todos={setTodos(this.props.firebase.doGetTodos, this.props.uid, this.props.toAddTodo)}/>\n            </div>\n        )\n    }\n}\n\nconst TodosShow = compose(withFirebase)(TodosShowBase)\n\nexport default TodosShow"]},"metadata":{},"sourceType":"module"}