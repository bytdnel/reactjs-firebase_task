{"ast":null,"code":"var _jsxFileName = \"/Users/danielbyta/Documents/work/sezam-auth/src/components/TodosShow/index.js\";\nimport React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\n\nconst renderTodos = todos => {};\n\nconst TodoList = ({\n  todos\n}) => {\n  // let hui = [{text: 'Пока ничего нет'}]\n  // let newTodos\n  // [todos, renderTodos] = React.useState(hui)\n  todos.then(result => {//renderTodos(todos = result.map(todo => <p>{todo}</p>))\n  });\n  console.log(todos);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"\\u043D\\u0443 \\u043D\\u0435 \\u0437\\u043D\\u0430\\u044E\"));\n};\n\nlet getTodos = async (fun, uid) => {\n  let todos = await fun(uid);\n  if (todos) return todos;\n};\n\nclass TodosShowBase extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const [todos, renderTodos] = React.useState(getTodos(this.props.firebase.doGetTodos, this.props.uid));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TodoList, {\n      todos: todos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst TodosShow = compose(withFirebase)(TodosShowBase);\nexport default TodosShow;","map":{"version":3,"sources":["/Users/danielbyta/Documents/work/sezam-auth/src/components/TodosShow/index.js"],"names":["React","Component","compose","withFirebase","renderTodos","todos","TodoList","then","result","console","log","getTodos","fun","uid","TodosShowBase","constructor","props","render","useState","firebase","doGetTodos","TodosShow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW,CAE9B,CAFD;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAa;AAC1B;AACA;AACA;AACAA,EAAAA,KAAK,CAACE,IAAN,CAAWC,MAAM,IAAI,CACjB;AACH,GAFD;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADJ,CADJ;AAMH,CAhBD;;AAkBA,IAAIM,QAAQ,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,MAAIR,KAAK,GAAG,MAAMO,GAAG,CAACC,GAAD,CAArB;AACA,MAAGR,KAAH,EAAU,OAAOA,KAAP;AACb,CAHD;;AAMA,MAAMS,aAAN,SAA4Bb,SAA5B,CAAsC;AAClCc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEH;;AAGDC,EAAAA,MAAM,GAAG;AAEL,UAAM,CAACZ,KAAD,EAAQD,WAAR,IAAuBJ,KAAK,CAACkB,QAAN,CAAeP,QAAQ,CAAC,KAAKK,KAAL,CAAWG,QAAX,CAAoBC,UAArB,EAAiC,KAAKJ,KAAL,CAAWH,GAA5C,CAAvB,CAA7B;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAfiC;;AAkBtC,MAAMgB,SAAS,GAAGnB,OAAO,CAACC,YAAD,CAAP,CAAsBW,aAAtB,CAAlB;AAEA,eAAeO,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport { compose } from 'recompose'\nimport { withFirebase } from '../Firebase'\n\nconst renderTodos = (todos) => {\n\n}\n\nconst TodoList = ({todos}) => {\n    // let hui = [{text: 'Пока ничего нет'}]\n    // let newTodos\n    // [todos, renderTodos] = React.useState(hui)\n    todos.then(result => {\n        //renderTodos(todos = result.map(todo => <p>{todo}</p>))\n    })\n    console.log(todos)\n\n\n    return(\n        <div>\n            <h1>ну не знаю</h1>\n            {/* {this.todos.map(todo => (<p>{todo}</p>))} */}\n        </div>\n    )\n}\n\nlet getTodos = async (fun, uid) => {\n    let todos = await fun(uid)\n    if(todos) return todos\n}\n\n\nclass TodosShowBase extends Component {\n    constructor(props) {\n        super(props)\n        \n    }\n    \n\n    render() { \n\n        const [todos, renderTodos] = React.useState(getTodos(this.props.firebase.doGetTodos, this.props.uid))\n        return(\n            <div>\n                <TodoList todos={todos}/>\n            </div>\n        )\n    }\n}\n\nconst TodosShow = compose(withFirebase)(TodosShowBase)\n\nexport default TodosShow"]},"metadata":{},"sourceType":"module"}