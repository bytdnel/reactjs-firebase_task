{"ast":null,"code":"var _jsxFileName = \"/Users/danielbyta/Documents/work/sezam-auth/src/components/Account/index.js\";\nimport React, { useState } from 'react';\nimport TodosShow from '../TodosShow';\nimport TodoAdd from '../TodoAdd';\nimport firebase from '../Firebase';\nimport { withAuthorization } from '../Session';\nlet uid = localStorage.getItem('uid');\n\nconst sendTodo = todo => todo.todo;\n\nconst AccountPage = () => {\n  const TodoList = (firebase, uid, todo) => /*#__PURE__*/React.createElement(TodosShow, {\n    firebase: firebase,\n    uid: uid,\n    toAddTodo: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 46\n    }\n  });\n\n  const [JSXTodoShow, renderJSXTodoShow] = useState(TodoList(firebase, uid, null));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"\\u0410\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\"), /*#__PURE__*/React.createElement(TodoAdd, {\n    firebase: firebase,\n    uid: uid,\n    onAddTodo: key => {\n      let newTodo = JSON.parse(localStorage.getItem(key));\n      localStorage.removeItem(key);\n      renderJSXTodoShow({\n        id: newTodo.createdAt,\n        component: TodoList(firebase, uid, newTodo)\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), JSXTodoShow);\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);","map":{"version":3,"sources":["/Users/danielbyta/Documents/work/sezam-auth/src/components/Account/index.js"],"names":["React","useState","TodosShow","TodoAdd","firebase","withAuthorization","uid","localStorage","getItem","sendTodo","todo","AccountPage","TodoList","JSXTodoShow","renderJSXTodoShow","key","newTodo","JSON","parse","removeItem","id","createdAt","component","condition","authUser"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,OAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,iBAAT,QAAkC,YAAlC;AAEA,IAAIC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAV;;AAEA,MAAMC,QAAQ,GAAIC,IAAD,IAAUA,IAAI,CAACA,IAAhC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,QAAQ,GAAG,CAACR,QAAD,EAAWE,GAAX,EAAgBI,IAAhB,kBAA0B,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEN,QAArB;AAA+B,IAAA,GAAG,EAAEE,GAApC;AAAyC,IAAA,SAAS,EAAEI,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3C;;AACA,QAAM,CAACG,WAAD,EAAcC,iBAAd,IAAmCb,QAAQ,CAACW,QAAQ,CAACR,QAAD,EAAWE,GAAX,EAAgB,IAAhB,CAAT,CAAjD;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,eAEE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEF,QAAnB;AAA6B,IAAA,GAAG,EAAEE,GAAlC;AAAuC,IAAA,SAAS,EAAES,GAAG,IAAI;AACvD,UAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWX,YAAY,CAACC,OAAb,CAAqBO,GAArB,CAAX,CAAd;AACAR,MAAAA,YAAY,CAACY,UAAb,CAAwBJ,GAAxB;AACAD,MAAAA,iBAAiB,CAAC;AAACM,QAAAA,EAAE,EAAEJ,OAAO,CAACK,SAAb;AAAwBC,QAAAA,SAAS,EAAEV,QAAQ,CAACR,QAAD,EAAWE,GAAX,EAAgBU,OAAhB;AAA3C,OAAD,CAAjB;AACD,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOGH,WAPH,CADF;AAWD,CAdD;;AAgBA,MAAMU,SAAS,GAAGC,QAAQ,IAAI,CAAC,CAACA,QAAhC;;AAEA,eAAenB,iBAAiB,CAACkB,SAAD,CAAjB,CAA6BZ,WAA7B,CAAf","sourcesContent":["import React, {useState} from 'react'\nimport TodosShow from '../TodosShow'\nimport TodoAdd  from '../TodoAdd'\nimport firebase from '../Firebase'\nimport { withAuthorization } from '../Session'\n \nlet uid = localStorage.getItem('uid')\n\nconst sendTodo = (todo) => todo.todo\n\nconst AccountPage = () => {\n  const TodoList = (firebase, uid, todo) => (<TodosShow firebase={firebase} uid={uid} toAddTodo={todo}/>)\n  const [JSXTodoShow, renderJSXTodoShow] = useState(TodoList(firebase, uid, null))\n  return (\n    <div>\n      <h1>Аккаунт</h1>\n      <TodoAdd firebase={firebase} uid={uid} onAddTodo={key => {\n        let newTodo = JSON.parse(localStorage.getItem(key))\n        localStorage.removeItem(key)\n        renderJSXTodoShow({id: newTodo.createdAt, component: TodoList(firebase, uid, newTodo)})\n      }}/>\n      {JSXTodoShow}\n    </div>\n  )\n}\n \nconst condition = authUser => !!authUser;\n \nexport default withAuthorization(condition)(AccountPage)"]},"metadata":{},"sourceType":"module"}