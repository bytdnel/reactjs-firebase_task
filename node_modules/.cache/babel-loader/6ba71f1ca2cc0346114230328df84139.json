{"ast":null,"code":"var _jsxFileName = \"/Users/danielbyta/Documents/work/sezam-auth/src/components/TodosShow/index.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\n\nconst TodoList = ({\n  promise\n}) => {\n  const [todos, setTodos] = useState(null);\n  useEffect(() => {\n    promise.then(result => {\n      console.log({\n        result\n      });\n      setTodos(result);\n    });\n  });\n  if (!todos) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 24\n    }\n  }, \"\\u0416\\u0434\\u0435\\u043C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0438\\u0437 Firebase\");\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 32\n    }\n  }, todo.todo)));\n}; // const TodoListi = ({todos}) => {\n//     console.log({todos})\n//     const [JSXComponents, renderTodos] = React.useState()\n//     if (!resolvedTodo) {\n//         todos.then(result => {\n//             let resolvedTodos = result.map(todo => {return <p>{todo.todo}</p>})\n//             console.log('Receiver Data')\n//             resolvedTodo = true\n//             renderTodos(resolvedTodos)\n//         })\n//     } //else {\n//         // renderTodos(<p>Ну че это победа</p>)\n//         // todos.then(result => {\n//         //     // console.log({result})\n//         //     let resolvedTodos = result.map(todo => <p>{todo.todo}</p>)\n//         //     renderTodos(resolvedTodos)\n//         // })\n//     // }\n//     return(\n//         <div>\n//             {!resolvedTodo && <p>Подождите, данные еще не пришли из Firebase</p>}\n//             {JSXComponents}\n//             {[<p>Hello</p>, <p>Hi</p>]}\n//         </div>\n//     )\n// }\n\n\nlet setTodos = async (fun, uid, toAddTodo) => {\n  let todos = await fun(uid);\n  if (todos) return todos;\n};\n\nclass TodosShowBase extends Component {\n  constructor(props) {\n    super(props);\n    console.log({\n      props\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TodoList, {\n      promise: this.props.firebase.doGetTodos(this.props.uid),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst TodosShow = compose(withFirebase)(TodosShowBase);\nexport default TodosShow;","map":{"version":3,"sources":["/Users/danielbyta/Documents/work/sezam-auth/src/components/TodosShow/index.js"],"names":["React","Component","useState","useEffect","compose","withFirebase","TodoList","promise","todos","setTodos","then","result","console","log","map","todo","fun","uid","toAddTodo","TodosShowBase","constructor","props","render","firebase","doGetTodos","TodosShow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,OAAO,CAACG,IAAR,CAAaC,MAAM,IAAI;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,QAAAA;AAAD,OAAZ;AACAF,MAAAA,QAAQ,CAACE,MAAD,CAAR;AACH,KAHD;AAID,GALM,CAAT;AAMA,MAAI,CAACH,KAAL,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAAP;AACZ,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACM,GAAN,CAAUC,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACA,IAAV,CAAlB,CADL,CADJ;AAKH,CAdD,C,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIN,QAAQ,GAAG,OAAOO,GAAP,EAAYC,GAAZ,EAAiBC,SAAjB,KAA+B;AAC1C,MAAIV,KAAK,GAAG,MAAMQ,GAAG,CAACC,GAAD,CAArB;AACA,MAAGT,KAAH,EAAU,OAAOA,KAAP;AACb,CAHD;;AAMA,MAAMW,aAAN,SAA4BlB,SAA5B,CAAsC;AAClCmB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACQ,MAAAA;AAAD,KAAZ;AACH;;AAGDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,UAApB,CAA+B,KAAKH,KAAL,CAAWJ,GAA1C,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAbiC;;AAgBtC,MAAMQ,SAAS,GAAGrB,OAAO,CAACC,YAAD,CAAP,CAAsBc,aAAtB,CAAlB;AAEA,eAAeM,SAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport { compose } from 'recompose'\nimport { withFirebase } from '../Firebase'\n\n\n\nconst TodoList = ({promise}) => {\n    const [todos, setTodos] = useState(null)\n    useEffect(() => {\n        promise.then(result => {\n            console.log({result})\n            setTodos(result)\n        })\n      })\n    if (!todos) return(<p>Ждем данные из Firebase</p>)\n    return (\n        <ul>\n            {todos.map(todo => <li>{todo.todo}</li>)}\n        </ul>\n    )\n}\n\n// const TodoListi = ({todos}) => {\n//     console.log({todos})\n//     const [JSXComponents, renderTodos] = React.useState()\n//     if (!resolvedTodo) {\n//         todos.then(result => {\n//             let resolvedTodos = result.map(todo => {return <p>{todo.todo}</p>})\n//             console.log('Receiver Data')\n//             resolvedTodo = true\n//             renderTodos(resolvedTodos)\n//         })\n//     } //else {\n//         // renderTodos(<p>Ну че это победа</p>)\n//         // todos.then(result => {\n//         //     // console.log({result})\n//         //     let resolvedTodos = result.map(todo => <p>{todo.todo}</p>)\n//         //     renderTodos(resolvedTodos)\n//         // })\n//     // }\n\n//     return(\n//         <div>\n//             {!resolvedTodo && <p>Подождите, данные еще не пришли из Firebase</p>}\n//             {JSXComponents}\n//             {[<p>Hello</p>, <p>Hi</p>]}\n//         </div>\n//     )\n// }\n\nlet setTodos = async (fun, uid, toAddTodo) => {\n    let todos = await fun(uid)\n    if(todos) return todos\n}\n\n\nclass TodosShowBase extends Component {\n    constructor(props) {\n        super(props)\n        console.log({props})\n    }\n    \n\n    render() { \n        return(\n            <div>\n                <TodoList promise={this.props.firebase.doGetTodos(this.props.uid)}/>\n            </div>\n        )\n    }\n}\n\nconst TodosShow = compose(withFirebase)(TodosShowBase)\n\nexport default TodosShow"]},"metadata":{},"sourceType":"module"}