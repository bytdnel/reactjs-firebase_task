{"ast":null,"code":"var _jsxFileName = \"/Users/danielbyta/Documents/work/sezam-auth/src/components/TodosShow/index.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nlet resolvedTodo = false;\n\nconst TodoList = ({\n  promise\n}) => {\n  const [todos, setTodos] = useState(null);\n  useEffect(() => {\n    promise.then(re => setTodos(u));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, !todos ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 23\n    }\n  }, \"\\u041D\\u0435\\u0442 \\u043D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043F\\u043E\\u043A\\u0430 \\u0447\\u0442\\u043E\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 52\n    }\n  }, \"\\u0412\\u0441\\u0435 \\u0435\\u0441\\u0442\\u044C\"));\n}; // const TodoListi = ({todos}) => {\n//     console.log({todos})\n//     const [JSXComponents, renderTodos] = React.useState()\n//     if (!resolvedTodo) {\n//         todos.then(result => {\n//             let resolvedTodos = result.map(todo => {return <p>{todo.todo}</p>})\n//             console.log('Receiver Data')\n//             resolvedTodo = true\n//             renderTodos(resolvedTodos)\n//         })\n//     } //else {\n//         // renderTodos(<p>Ну че это победа</p>)\n//         // todos.then(result => {\n//         //     // console.log({result})\n//         //     let resolvedTodos = result.map(todo => <p>{todo.todo}</p>)\n//         //     renderTodos(resolvedTodos)\n//         // })\n//     // }\n//     return(\n//         <div>\n//             {!resolvedTodo && <p>Подождите, данные еще не пришли из Firebase</p>}\n//             {JSXComponents}\n//             {[<p>Hello</p>, <p>Hi</p>]}\n//         </div>\n//     )\n// }\n\n\nlet setTodos = async (fun, uid, toAddTodo) => {\n  fun(uid).then(result => {\n    return result;\n  }); //console.log(todos, toAddTodo)\n  //if(todos) return todos\n};\n\nclass TodosShowBase extends Component {\n  constructor(props) {\n    super(props);\n    console.log({\n      props\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TodoList, {\n      promise: setTodos(this.props.firebase.doGetTodos, this.props.uid, this.props.toAddTodo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst TodosShow = compose(withFirebase)(TodosShowBase);\nexport default TodosShow;","map":{"version":3,"sources":["/Users/danielbyta/Documents/work/sezam-auth/src/components/TodosShow/index.js"],"names":["React","Component","useState","useEffect","compose","withFirebase","resolvedTodo","TodoList","promise","todos","setTodos","then","re","u","fun","uid","toAddTodo","result","TodosShowBase","constructor","props","console","log","render","firebase","doGetTodos","TodosShow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,YAAT,QAA6B,aAA7B;AAEA,IAAIC,YAAY,GAAG,KAAnB;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO,CAACG,IAAR,CAAaC,EAAE,IAAIF,QAAQ,CAACG,CAAD,CAA3B;AACD,GAFM,EAEJ,EAFI,CAAT;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACJ,KAAD,gBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2GAAT,gBAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAD3C,CADJ;AAKH,CAVD,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,QAAQ,GAAG,OAAOI,GAAP,EAAYC,GAAZ,EAAiBC,SAAjB,KAA+B;AAC1CF,EAAAA,GAAG,CAACC,GAAD,CAAH,CAASJ,IAAT,CAAcM,MAAM,IAAI;AAAC,WAAOA,MAAP;AAAc,GAAvC,EAD0C,CAE1C;AACA;AACH,CAJD;;AAOA,MAAMC,aAAN,SAA4BjB,SAA5B,CAAsC;AAClCkB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,MAAAA;AAAD,KAAZ;AACH;;AAGDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEb,QAAQ,CAAC,KAAKU,KAAL,CAAWI,QAAX,CAAoBC,UAArB,EAAiC,KAAKL,KAAL,CAAWL,GAA5C,EAAiD,KAAKK,KAAL,CAAWJ,SAA5D,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAbiC;;AAgBtC,MAAMU,SAAS,GAAGtB,OAAO,CAACC,YAAD,CAAP,CAAsBa,aAAtB,CAAlB;AAEA,eAAeQ,SAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport { compose } from 'recompose'\nimport { withFirebase } from '../Firebase'\n\nlet resolvedTodo = false\n\n\n\nconst TodoList = ({promise}) => {\n    const [todos, setTodos] = useState(null)\n    useEffect(() => {\n        promise.then(re => setTodos(u));\n      }, [])\n    return (\n        <div>\n            {!todos ? <p>Нет ничего пока что</p> : <p>Все есть</p>}\n        </div>\n    )\n}\n\n// const TodoListi = ({todos}) => {\n//     console.log({todos})\n//     const [JSXComponents, renderTodos] = React.useState()\n//     if (!resolvedTodo) {\n//         todos.then(result => {\n//             let resolvedTodos = result.map(todo => {return <p>{todo.todo}</p>})\n//             console.log('Receiver Data')\n//             resolvedTodo = true\n//             renderTodos(resolvedTodos)\n//         })\n//     } //else {\n//         // renderTodos(<p>Ну че это победа</p>)\n//         // todos.then(result => {\n//         //     // console.log({result})\n//         //     let resolvedTodos = result.map(todo => <p>{todo.todo}</p>)\n//         //     renderTodos(resolvedTodos)\n//         // })\n//     // }\n\n//     return(\n//         <div>\n//             {!resolvedTodo && <p>Подождите, данные еще не пришли из Firebase</p>}\n//             {JSXComponents}\n//             {[<p>Hello</p>, <p>Hi</p>]}\n//         </div>\n//     )\n// }\n\nlet setTodos = async (fun, uid, toAddTodo) => {\n    fun(uid).then(result => {return result})\n    //console.log(todos, toAddTodo)\n    //if(todos) return todos\n}\n\n\nclass TodosShowBase extends Component {\n    constructor(props) {\n        super(props)\n        console.log({props})\n    }\n    \n\n    render() { \n        return(\n            <div>\n                <TodoList promise={setTodos(this.props.firebase.doGetTodos, this.props.uid, this.props.toAddTodo)}/>\n            </div>\n        )\n    }\n}\n\nconst TodosShow = compose(withFirebase)(TodosShowBase)\n\nexport default TodosShow"]},"metadata":{},"sourceType":"module"}