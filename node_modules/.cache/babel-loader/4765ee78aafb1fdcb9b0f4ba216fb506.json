{"ast":null,"code":"var _jsxFileName = \"/Users/danielbyta/Documents/work/sezam-auth/src/components/TodosShow/index.js\";\nimport React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\n\nconst renderTodos = todos => {};\n\nconst TodoList = ({\n  todos\n}) => {\n  let odos = [{\n    text: 'Пока ничего нет'\n  }][(newTodos, renderTodos)] = React.useState(newTodos);\n  todos.then(result => {//renderTodos(todos = result.map(todo => <p>{todo}</p>))\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"\\u043D\\u0443 \\u043D\\u0435 \\u0437\\u043D\\u0430\\u044E\"), newTodos.map(todo => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 36\n    }\n  }, todo)));\n};\n\nlet getTodos = async (fun, uid) => {\n  let todos = await fun(uid);\n  if (todos) return todos;\n};\n\nconst todoos = [{\n  id: 1,\n  text: 'hello'\n}, {\n  id: 2,\n  text: 'hello'\n}, {\n  id: 3,\n  text: 'hello'\n}, {\n  id: 4,\n  text: 'hello'\n}, {\n  id: 5,\n  text: 'hello'\n}];\n\nclass TodosShowBase extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TodoList, {\n      todos: getTodos(this.props.firebase.doGetTodos, this.props.uid),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst TodosShow = compose(withFirebase)(TodosShowBase);\nexport default TodosShow;","map":{"version":3,"sources":["/Users/danielbyta/Documents/work/sezam-auth/src/components/TodosShow/index.js"],"names":["React","Component","compose","withFirebase","renderTodos","todos","TodoList","odos","text","newTodos","useState","then","result","map","todo","getTodos","fun","uid","todoos","id","TodosShowBase","constructor","props","render","firebase","doGetTodos","TodosShow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW,CAE9B,CAFD;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAa;AAC1B,MAAIE,IAAI,GAAG,CAAC;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAD,GACVC,QAAQ,EAAEL,WADA,KACeJ,KAAK,CAACU,QAAN,CAAeD,QAAf,CAD1B;AAEAJ,EAAAA,KAAK,CAACM,IAAN,CAAWC,MAAM,IAAI,CACjB;AACH,GAFD;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADJ,EAEKH,QAAQ,CAACI,GAAT,CAAaC,IAAI,iBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAJ,CAAtB,CAFL,CADJ;AAMH,CAdD;;AAgBA,IAAIC,QAAQ,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,MAAIZ,KAAK,GAAG,MAAMW,GAAG,CAACC,GAAD,CAArB;AACA,MAAGZ,KAAH,EAAU,OAAOA,KAAP;AACb,CAHD;;AAOA,MAAMa,MAAM,GAAG,CACX;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQX,EAAAA,IAAI,EAAE;AAAd,CADW,EAEX;AAACW,EAAAA,EAAE,EAAE,CAAL;AAAQX,EAAAA,IAAI,EAAE;AAAd,CAFW,EAGX;AAACW,EAAAA,EAAE,EAAE,CAAL;AAAQX,EAAAA,IAAI,EAAE;AAAd,CAHW,EAIX;AAACW,EAAAA,EAAE,EAAE,CAAL;AAAQX,EAAAA,IAAI,EAAE;AAAd,CAJW,EAKX;AAACW,EAAAA,EAAE,EAAE,CAAL;AAAQX,EAAAA,IAAI,EAAE;AAAd,CALW,CAAf;;AAOA,MAAMY,aAAN,SAA4BnB,SAA5B,CAAsC;AAClCoB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAGDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAER,QAAQ,CAAC,KAAKO,KAAL,CAAWE,QAAX,CAAoBC,UAArB,EAAiC,KAAKH,KAAL,CAAWL,GAA5C,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAZiC;;AAetC,MAAMS,SAAS,GAAGxB,OAAO,CAACC,YAAD,CAAP,CAAsBiB,aAAtB,CAAlB;AAEA,eAAeM,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport { compose } from 'recompose'\nimport { withFirebase } from '../Firebase'\n\nconst renderTodos = (todos) => {\n\n}\n\nconst TodoList = ({todos}) => {\n    let odos = [{text: 'Пока ничего нет'}]\n    [newTodos, renderTodos] = React.useState(newTodos)\n    todos.then(result => {\n        //renderTodos(todos = result.map(todo => <p>{todo}</p>))\n    })\n\n\n    return(\n        <div>\n            <h1>ну не знаю</h1>\n            {newTodos.map(todo => (<p>{todo}</p>))}\n        </div>\n    )\n}\n\nlet getTodos = async (fun, uid) => {\n    let todos = await fun(uid)\n    if(todos) return todos\n}\n\n\n\nconst todoos = [\n    {id: 1, text: 'hello'},\n    {id: 2, text: 'hello'},\n    {id: 3, text: 'hello'},\n    {id: 4, text: 'hello'},\n    {id: 5, text: 'hello'}\n]\nclass TodosShowBase extends Component {\n    constructor(props) {\n        super(props)\n    }\n    \n\n    render() { \n        return(\n            <div>\n                <TodoList todos={getTodos(this.props.firebase.doGetTodos, this.props.uid)}/>\n            </div>\n        )\n    }\n}\n\nconst TodosShow = compose(withFirebase)(TodosShowBase)\n\nexport default TodosShow"]},"metadata":{},"sourceType":"module"}