{"ast":null,"code":"var _jsxFileName = \"/Users/danielbyta/Documents/work/sezam-auth/src/components/SignIn/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"), /*#__PURE__*/React.createElement(SignInForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(SignUpLink, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}));\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const {\n        email,\n        password\n      } = this.state;\n      this.props.firebase.doSignInWithEmailAndPassword(email, password).then(authUser => {\n        console.log(authUser);\n        console.log(authUser.user.uid);\n        this.setState({ ...INITIAL_STATE\n        });\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = { ...INITIAL_STATE\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      error\n    } = this.state;\n    const isInvalid = password === '' || email === '';\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      value: email,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      value: password,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"\\u0412\\u0445\\u043E\\u0434\"), error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, error.message));\n  }\n\n}\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\nexport default SignInPage;\nexport { SignInForm };","map":{"version":3,"sources":["/Users/danielbyta/Documents/work/sezam-auth/src/components/SignIn/index.js"],"names":["React","Component","withRouter","compose","SignUpLink","withFirebase","ROUTES","SignInPage","INITIAL_STATE","email","password","error","SignInFormBase","constructor","props","onSubmit","event","state","firebase","doSignInWithEmailAndPassword","then","authUser","console","log","user","uid","setState","history","push","HOME","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","SignInForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n \nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n \nconst SignInPage = () => (\n  <div>\n    <h1>Войти</h1>\n    <SignInForm />\n    <SignUpLink />\n  </div>\n);\n \nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n \nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n \n    this.state = { ...INITIAL_STATE };\n  }\n \n  onSubmit = event => {\n    const { email, password } = this.state;\n \n    this.props.firebase\n        .doSignInWithEmailAndPassword(email, password)\n        .then(authUser => {\n            console.log(authUser)\n            console.log(authUser.user.uid)\n            this.setState({ ...INITIAL_STATE })\n            this.props.history.push(ROUTES.HOME)\n        })\n        .catch(error => {\n            this.setState({ error });\n        });\n \n    event.preventDefault();\n  };\n \n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n \n  render() {\n    const { email, password, error } = this.state;\n \n    const isInvalid = password === '' || email === '';\n \n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Пароль\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Вход\n        </button>\n \n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n \nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n \nexport default SignInPage;\n \nexport { SignInForm }"]},"metadata":{},"sourceType":"module"}