{"ast":null,"code":"var _jsxFileName = \"/Users/danielbyta/Documents/work/sezam-auth/src/components/Session/withAuthorization.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport AuthUserContext from './context';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 16\n        }\n      }));\n    }\n\n  }\n\n  return compose(withRouter, withFirebase)(WithAuthorization);\n};\n\nexport default withAuthorization;","map":{"version":3,"sources":["/Users/danielbyta/Documents/work/sezam-auth/src/components/Session/withAuthorization.js"],"names":["React","withRouter","compose","withFirebase","ROUTES","AuthUserContext","withAuthorization","condition","Component","WithAuthorization","componentDidMount","listener","props","firebase","auth","onAuthStateChanged","authUser","history","push","SIGN_IN","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;AACA,OAAOC,eAAP,MAA4B,WAA5B;;AAEA,MAAMC,iBAAiB,GAAGC,SAAS,IAAIC,SAAS,IAAI;AAClD,QAAMC,iBAAN,SAAgCT,KAAK,CAACQ,SAAtC,CAAgD;AAE9CE,IAAAA,iBAAiB,GAAG;AAChB,WAAKC,QAAL,GAAgB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,kBAAzB,CACZC,QAAQ,IAAI;AACR,YAAI,CAACT,SAAS,CAACS,QAAD,CAAd,EAA0B;AACtB,eAAKJ,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwBd,MAAM,CAACe,OAA/B;AACH;AACJ,OALW,CAAhB;AAOH;;AAEDC,IAAAA,oBAAoB,GAAG;AACnB,WAAKT,QAAL;AACH;;AACDU,IAAAA,MAAM,GAAG;AACL,0BAAO,oBAAC,SAAD,oBAAe,KAAKT,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AAjB6C;;AAoBhD,SAAOV,OAAO,CACZD,UADY,EAEZE,YAFY,CAAP,CAGLM,iBAHK,CAAP;AAID,CAzBD;;AA2BA,eAAeH,iBAAf","sourcesContent":["import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose'\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes'\nimport AuthUserContext from './context'\n \nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    \n    componentDidMount() {\n        this.listener = this.props.firebase.auth.onAuthStateChanged(\n            authUser => {\n                if (!condition(authUser)) {\n                    this.props.history.push(ROUTES.SIGN_IN)\n                }\n            }\n        )\n    }\n\n    componentWillUnmount() {\n        this.listener();\n    }\n    render() {\n        return <Component {...this.props} />\n    }\n  }\n \n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization)\n}\n \nexport default withAuthorization"]},"metadata":{},"sourceType":"module"}