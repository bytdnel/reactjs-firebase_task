{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/auth';\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\nconsole.log(config);\n\nclass Firebase {\n  constructor() {\n    this.doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n\n    this.doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n\n    this.doSignOut = () => {\n      let catched = this.auth.signOut();\n      let result = {};\n\n      if (catched) {\n        this.result.data;\n      }\n\n      return result;\n    };\n\n    this.doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    this.doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n    app.initializeApp(config);\n    this.auth = app.auth();\n  }\n\n}\n\nexport default Firebase;","map":{"version":3,"sources":["/Users/danielbyta/Documents/work/sezam-auth/src/components/Firebase/firebase.js"],"names":["app","config","apiKey","process","env","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","console","log","Firebase","constructor","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","catched","signOut","result","data","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","initializeApp"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADT;AAEXC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,qBAFb;AAGXC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,sBAHd;AAIXC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,oBAJZ;AAKXC,EAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,wBALhB;AAMXC,EAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW;AANpB,CAAf;AASAC,OAAO,CAACC,GAAR,CAAYhB,MAAZ;;AAEA,MAAMiB,QAAN,CAAe;AACXC,EAAAA,WAAW,GAAG;AAAA,SAKdC,gCALc,GAKqB,CAACC,KAAD,EAAQC,QAAR,KAC/B,KAAKC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAAgDC,QAAhD,CANU;;AAAA,SAQdG,4BARc,GAQiB,CAACJ,KAAD,EAAQC,QAAR,KAC3B,KAAKC,IAAL,CAAUG,0BAAV,CAAqCL,KAArC,EAA4CC,QAA5C,CATU;;AAAA,SAWdK,SAXc,GAWF,MAAM;AACd,UAAIC,OAAO,GAAG,KAAKL,IAAL,CAAUM,OAAV,EAAd;AACA,UAAIC,MAAM,GAAG,EAAb;;AACA,UAAIF,OAAJ,EAAa;AACT,aAAKE,MAAL,CAAYC,IAAZ;AACH;;AACD,aAAOD,MAAP;AACH,KAlBa;;AAAA,SAoBdE,eApBc,GAoBIX,KAAK,IAAI,KAAKE,IAAL,CAAUU,sBAAV,CAAiCZ,KAAjC,CApBb;;AAAA,SAsBda,gBAtBc,GAsBKZ,QAAQ,IACvB,KAAKC,IAAL,CAAUY,WAAV,CAAsBC,cAAtB,CAAqCd,QAArC,CAvBU;;AACVtB,IAAAA,GAAG,CAACqC,aAAJ,CAAkBpC,MAAlB;AACA,SAAKsB,IAAL,GAAYvB,GAAG,CAACuB,IAAJ,EAAZ;AACH;;AAJU;;AA2Bf,eAAeL,QAAf","sourcesContent":["import app from 'firebase/app'\nimport 'firebase/auth'\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  }\n\nconsole.log(config)\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config)\n        this.auth = app.auth()\n    }\n\n    doCreateUserWithEmailAndPassword = (email, password) =>\n        this.auth.createUserWithEmailAndPassword(email, password)\n\n    doSignInWithEmailAndPassword = (email, password) =>\n        this.auth.signInWithEmailAndPassword(email, password)\n\n    doSignOut = () => {\n        let catched = this.auth.signOut()\n        let result = {}\n        if (catched) {\n            this.result.data\n        }\n        return result\n    }\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email)\n \n    doPasswordUpdate = password =>\n        this.auth.currentUser.updatePassword(password)\n}\n\nexport default Firebase;"]},"metadata":{},"sourceType":"module"}